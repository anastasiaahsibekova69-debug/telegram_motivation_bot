import os
import random
from aiogram import Bot, Dispatcher, executor, types
from apscheduler.schedulers.asyncio import AsyncIOScheduler

API_TOKEN = os.getenv("BOT_TOKEN")  # —Ç–æ–∫–µ–Ω –±–µ—Ä—ë–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# —Å–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
subscribers = set()

# —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ª—É—á–∞–π–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏
async def send_motivation():
    if not subscribers:
        return
    files = os.listdir("motivation")
    if not files:
        return
    photo_path = os.path.join("motivation", random.choice(files))
    for user_id in subscribers:
        try:
            with open(photo_path, "rb") as photo:
                await bot.send_photo(user_id, photo, caption="‚ú® –¢–≤–æ—è –∫–∞—Ä—Ç–æ—á–∫–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è!")
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å {user_id}: {e}")

# /start
@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    subscribers.add(message.chat.id)
    await message.answer("–ü—Ä–∏–≤–µ—Ç! üôå –ö–∞–∂–¥—ã–π –¥–µ–Ω—å —è –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É ‚ú®")

# /stop
@dp.message_handler(commands=["stop"])
async def stop(message: types.Message):
    subscribers.discard(message.chat.id)
    await message.answer("–¢—ã –æ—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ üö´")

# –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ ‚Äî –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 09:00 –ø–æ –ú–æ—Å–∫–≤–µ
scheduler = AsyncIOScheduler(timezone="Europe/Moscow")
scheduler.add_job(send_motivation, "cron", hour=9, minute=0)
scheduler.start()

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
